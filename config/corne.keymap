/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/ {
    combos {
        compatible = "zmk,combos";
        combo_layer_l {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&mo 1>;
            slow-release;
        };
        combo_layer_r {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&mo 1>;
            slow-release;
        };
        combo_layer_kp {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&mo 2>;
            slow-release;
        };
        combo_layer_nav {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&mo 3>;
            slow-release;
        };
    };
};

/ {
        behaviors {
            lh_pht: left_positional_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <280>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                quick-tap-ms = <175>;
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 23 30 31 32 33 34>;    // <---[[right-hand keys]]
                hold-trigger-on-release;
            };

            rh_pht: right_positional_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <280>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                quick-tap-ms = <175>;
                require-prior-idle-ms = <150>;
                bindings = <&kp>, <&kp>;
                hold-trigger-key-positions = <1 2 3 4 5 12 13 14 16 17 25 26 27 28 29>;    // <---[[right-hand keys]]
                hold-trigger-on-release;
            };
        };
        

        keymap {
                compatible = "zmk,keymap";
                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R     &kp T                      &kp Y  &kp U   &kp I   &kp O   &kp P    &trans
   &kp TAB   &kp A &lh_pht LALT S &lh_pht LCTRL D &lh_pht LSHFT F &kp G      &kp H  &rh_pht RSHFT J  &rh_pht RCTRL K &rh_pht RALT L   &kp SEMI  &kp SQT
   &trans    &kp Z &kp X &kp C &kp V     &kp B                      &kp N  &kp M  &kp COMMA &kp DOT   &kp QMARK &trans
                 &kp LGUI &kp DEL &kp BSPC                          &kp RET &kp SPACE  &kp RALT
                        >;
                };
                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp LBKT    &kp LBKT     &kp RBKT     &kp MINUS  &kp LT       &kp CARET   &kp PIPE   &kp AT       &kp DLLR    &kp TILDE   &trans
   &trans  &kp LPAR    &kp LPAR     &kp RPAR     &kp EQUAL  &kp GT       &trans      &kp FSLH   &kp BSLH     &kp STAR    &kp EXCL    &trans
   &trans  &kp RBRC    &kp LBRC     &kp RBRC     &kp PLUS   &kp AMPS     &trans      &kp HASH   &kp PERCENT  &kp UNDER   &kp GRAVE   &trans
                           &trans    &trans      &trans                  &trans      &trans     &trans
                        >;
                };
                number_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans &trans &trans &trans &trans &trans   &trans &kp N7 &kp N8  &kp N9 &trans &trans
   &trans &trans &trans &trans &trans &trans   &trans &kp N4 &kp N5  &kp N6 &trans &trans
   &trans &trans &trans &trans &trans &trans   &trans &kp N1 &kp N2  &kp N3 &trans &trans
                        &trans &trans &trans   &kp N0 &trans &trans
                        >;
                };

                navigation_layer {
                    bindings = <
    &trans &trans &trans &trans &trans &trans   &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2   &trans  &bt BT_CLR &trans
    &trans &trans &trans &trans &trans &trans   &kp LEFT &kp UP &kp DOWN &kp RIGHT &trans &trans
    &trans &trans &trans &trans &trans &trans   &trans &trans   &trans   &trans    &trans &trans
                         &trans &trans &trans   &trans &trans   &trans
                         >;
                };
        };
};

